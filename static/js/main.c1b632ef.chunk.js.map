{"version":3,"sources":["actions/index.ts","stockApiWrapper/fetches.ts","config.ts","reducers/inputReducer.ts","reducers/stockReducer.ts","reducers/index.ts","components/Input.tsx","styles/vars.ts","actions/inputActions.ts","actions/stockActions.ts","components/Loader.tsx","components/stock/StockKeyMetrics.tsx","components/stock/StockProfile.tsx","components/stock/StockRating.tsx","components/stock/StockContainer.tsx","App.tsx","index.tsx"],"names":["ActionType","BASE_URL","API_PARAM","createCompanyProfileUrl","ticker","createCompanyKeyMetricsUrl","createCompanyRatingUrl","INITIAL_STATE","metrics","undefined","profile","rating","combineReducers","input","state","action","type","INPUT_CHANGE","payload","stock","FETCH_KEY_METRICS","FETCH_PROFILE","FETCH_RATING","InputElement","styled","Button","button","mapDispatchToProps","updateInput","fetchKeyMetrics","dispatch","a","fetch","response","json","console","log","fetchProfile","fetchRating","connect","onInputChange","e","target","value","toUpperCase","onButtonClick","setTimeout","onKeyDown","keyCode","onChange","placeholder","onClick","LoaderElement","div","Loader","Container","DataRow","StockKeyMetricsComponent","revenuePerShareTTM","toFixed","netIncomePerShareTTM","operatingCashFlowPerShareTTM","freeCashFlowPerShareTTM","peRatioTTM","priceToSalesRatioTTM","pfcfRatioTTM","pbRatioTTM","bookValuePerShareTTM","tangibleBookValuePerShareTTM","dividendYieldTTM","dividendYieldPercentageTTM","StockProfileComponent","symbol","companyName","description","substr","price","mktCap","dcf","dcfDiff","StockRatingContainer","ratingScore","ratingDetailsDCFScore","ratingDetailsDEScore","ratingDetailsPBScore","ratingDetailsPEScore","ratingDetailsROAScore","ratingDetailsROEScore","StockKeyMetrics","StockProfile","StockRating","GlobalStyle","createGlobalStyle","Top","App","React","Component","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1b632ef.chunk.js","sourcesContent":["export * from './inputActions';\nexport * from './stockActions';\n\nexport enum ActionType {\n  INPUT_CHANGE = 'INPUT_CHANGE',\n  FETCH_KEY_METRICS = 'FETCH_KEY_DATA',\n  FETCH_PROFILE = 'FETCH_PROFILE',\n  FETCH_RATING = 'FETCH_RATING',\n} \n","import { config } from '../config';\n\nexport const BASE_URL = 'https://financialmodelingprep.com/api'\nconst API_PARAM = `?apikey=${config.stockApiKey}`;\n\nexport const createCompanyProfileUrl = (ticker: string) => `${BASE_URL}/v3/profile/${ticker}${API_PARAM}`\nexport const createCompanyKeyMetricsUrl = (ticker: string) => `${BASE_URL}/v3/key-metrics-ttm/${ticker}${API_PARAM}`\nexport const createCompanyRatingUrl = (ticker: string) => `${BASE_URL}/v3/rating/${ticker}${API_PARAM}`\n","export const config = {\n  stockApiKey: '6c644445c1ba7094876d250d94496ede'\n}","import { ActionType, UpdateInputAction } from '../actions';\n\nexport default (state = '', action: UpdateInputAction) => {\n  switch (action.type) {\n    case ActionType.INPUT_CHANGE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import { ActionType, FetchKeyMetricsAction, FetchProfileAction, FetchRatingAction } from '../actions';\n\nexport interface StockProfile {\n  \"symbol\" : string;\n  \"price\" : number;\n  \"mktCap\" : number;\n  \"range\" : string;\n  \"companyName\" : string;\n  \"exchangeShortName\" : string;\n  \"website\" : string;\n  \"description\" : string;\n  \"fullTimeEmployees\" : string;\n  \"state\" : string;\n  \"dcfDiff\" : number;\n  \"dcf\" : number;\n  \"image\" : string;\n  \"ipoDate\" : string;\n}\n\nexport interface StockKeyMetrics {\n  \"revenuePerShareTTM\" : number,\n  \"netIncomePerShareTTM\" : number,\n  \"operatingCashFlowPerShareTTM\" : number,\n  \"freeCashFlowPerShareTTM\" : number,\n  \"cashPerShareTTM\" : number,\n  \"bookValuePerShareTTM\" : number,\n  \"tangibleBookValuePerShareTTM\" : number,\n  \"shareholdersEquityPerShareTTM\" : number,\n  \"marketCapTTM\" : number,\n  \"peRatioTTM\" : number,\n  \"priceToSalesRatioTTM\" : number,\n  \"pfcfRatioTTM\" : number,\n  \"pbRatioTTM\" : number,\n  \"debtToAssetsTTM\" : number,\n  \"dividendYieldTTM\" : number,\n  \"dividendYieldPercentageTTM\" : number,\n  \"payoutRatioTTM\" : number,\n}\n\nexport interface StockRating {\n  \"date\" : string;\n  \"rating\" : string;\n  \"ratingScore\" : number;\n  \"ratingRecommendation\" : string;\n  \"ratingDetailsDCFScore\" : number;\n  \"ratingDetailsDCFRecommendation\" : string;\n  \"ratingDetailsROEScore\" : number;\n  \"ratingDetailsROERecommendation\" : string;\n  \"ratingDetailsROAScore\" : number;\n  \"ratingDetailsROARecommendation\" : string;\n  \"ratingDetailsDEScore\" : number;\n  \"ratingDetailsDERecommendation\" : string;\n  \"ratingDetailsPEScore\" : number;\n  \"ratingDetailsPERecommendation\" : string;\n  \"ratingDetailsPBScore\" : number;\n  \"ratingDetailsPBRecommendation\" : string;\n}\n\nexport interface StockData {\n  metrics?: StockKeyMetrics;\n  profile?: StockProfile;\n  rating?: StockRating;\n};\n\nconst INITIAL_STATE: StockData = {\n  metrics: undefined,\n  profile: undefined,\n  rating: undefined,\n}\n\nexport default (state = INITIAL_STATE, action: FetchKeyMetricsAction | FetchProfileAction | FetchRatingAction): StockData => {\n  switch (action.type) {\n    case ActionType.FETCH_KEY_METRICS:\n      return { ...state, metrics: action.payload };\n    case ActionType.FETCH_PROFILE:\n      return { ...state, profile: action.payload };\n    case ActionType.FETCH_RATING:\n      return { ...state, rating: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport inputReducer from './inputReducer';\nimport stockReducer from './stockReducer';\n\nexport default combineReducers({\n  input: inputReducer,\n  stock: stockReducer,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { updateInput, fetchKeyMetrics, fetchProfile, fetchRating } from '../actions';\nimport * as styles from '../styles/vars';\nimport { State } from '../types';\n\nconst InputElement = styled.input`\n  background-color: #f3f3f3;\n  color: ${styles.PRIMARY_DARK};\n  padding: 0.75rem 1rem;\n  border-radius: ${styles.BORDER_RADIUS};\n  margin: 1.5rem 0.5rem 0.5rem;\n  text-align: center;\n  border: none;\n`;\n\nconst Button = styled.button`\n  background-color: ${styles.COMPLEMENTARY_COLOR};\n  padding: 0.75rem 2rem;\n  border-radius: ${styles.BORDER_RADIUS};\n  border: none;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: #f3f3f3;\n    color: black;\n    cursor: pointer;\n  }\n`;\n\ninterface Props {\n  input: string;\n  updateInput: (input: string) => void;\n  fetchKeyMetrics: (ticker: string) => void;\n  fetchProfile: (ticker: string) => void;\n  fetchRating: (ticker: string) => void;\n}\n\nconst Input = ({ input, updateInput, fetchKeyMetrics, fetchProfile, fetchRating }: Props) => {\n  const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    updateInput(e.target.value.toUpperCase());\n  };\n\n  const onButtonClick = () => {\n    fetchProfile(input);\n    setTimeout(() => fetchKeyMetrics(input), 1000);\n    setTimeout(() => fetchRating(input), 2000);\n  };\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.keyCode === 13) onButtonClick();\n  };\n\n  const render = () => {\n    return (\n      <div>\n        <InputElement\n          onChange={onInputChange}\n          onKeyDown={onKeyDown}\n          placeholder=\"Enter stock ticker\"\n          value={input}\n        />\n        <Button onClick={onButtonClick}>Search</Button>\n      </div>\n    );\n  }\n\n  return render();\n}\n\nconst mapStateToProps = (state: State) => ({\n  input: state.input,\n});\n\nconst mapDispatchToProps = {\n  updateInput, fetchKeyMetrics, fetchProfile, fetchRating\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Input);\n","export const BG_COLOR = '#3f3f3f';\nexport const SECOND_COLOR = '#5E788E';\nexport const THIRD_COLOR = '#41454F';\nexport const PRIMARY_DARK = '#312D33';\nexport const PRIMARY_GRAY = '#383F45';\nexport const LIGHT_GRAY = '#f3f3f3';\nexport const COMPLEMENTARY_COLOR = '#666685';\n\nexport const BORDER_RADIUS = '2px';\n","import { ActionType } from './';\n\nexport const updateInput = (input: string): UpdateInputAction => ({\n  type: ActionType.INPUT_CHANGE,\n  payload: input,\n});\n\nexport interface UpdateInputAction { type: ActionType.INPUT_CHANGE, payload: string };","import { StockKeyMetrics, StockProfile, StockRating } from '../reducers/stockReducer';\nimport { createCompanyKeyMetricsUrl, createCompanyProfileUrl, createCompanyRatingUrl } from '../stockApiWrapper/fetches';\nimport { ActionType } from './';\n\nexport const fetchKeyMetrics = (ticker: string) => async (dispatch: any) => {\n  const response = await fetch(createCompanyKeyMetricsUrl(ticker));\n  const [json] = await response.json();\n  console.log(json);\n\n  dispatch({\n    type: ActionType.FETCH_KEY_METRICS,\n    payload: json\n  });\n};\n\nexport const fetchProfile = (ticker: string) => async (dispatch: any) => {\n  const response = await fetch(createCompanyProfileUrl(ticker));\n  const [json] = await response.json();\n  console.log(json);\n\n  dispatch({\n    type: ActionType.FETCH_PROFILE,\n    payload: json\n  })\n};\n\nexport const fetchRating = (ticker: string) => async (dispatch: any) => {\n  const response = await fetch(createCompanyRatingUrl(ticker));\n  const [json] = await response.json();\n  console.log(json);\n\n  dispatch({\n    type: ActionType.FETCH_RATING,\n    payload: json\n  })\n};\n\nexport interface FetchKeyMetricsAction {\n  type: ActionType.FETCH_KEY_METRICS;\n  payload: StockKeyMetrics;\n};\n\nexport interface FetchProfileAction {\n  type: ActionType.FETCH_PROFILE;\n  payload: StockProfile;\n};\n\nexport interface FetchRatingAction {\n  type: ActionType.FETCH_RATING;\n  payload: StockRating;\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst LoaderElement = styled.div`\n  &,\n  &:after {\n    border-radius: 50%;\n    width: 10em;\n    height: 10em;\n  }\n\n  margin: 60px auto;\n  font-size: 10px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-right: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);\n  border-left: 1.1em solid #ffffff;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  -webkit-animation: load8 1.1s infinite linear;\n  animation: load8 1.5s infinite linear;\n\n  @-webkit-keyframes load8 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes load8 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n`;\n\nconst Loader = () => <LoaderElement />;\n\nexport default Loader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { StockKeyMetrics } from '../../reducers/stockReducer';\nimport * as styles from '../../styles/vars';\n\ninterface Props {\n  metrics: StockKeyMetrics;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nconst DataRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 420px;\n  padding: .5rem;\n  margin: .25rem;\n  border-radius: ${styles.BORDER_RADIUS};\n  border-bottom: 2px solid ${styles.LIGHT_GRAY};\n  background-color: ${styles.SECOND_COLOR};\n`;\n\nconst StockKeyMetricsComponent = ({ metrics }: Props) => {\n  return (\n    <Container>\n      <DataRow>\n        <p>Revenue per share</p>\n        <p>{metrics.revenuePerShareTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>Net income per share</p>\n        <p>{metrics.netIncomePerShareTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>Operating cash flow per share</p>\n        <p>{metrics.operatingCashFlowPerShareTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>Free cash flow per share</p>\n        <p>{metrics.freeCashFlowPerShareTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>P/E ratio</p>\n        <p>{metrics.peRatioTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>P/S ratio</p>\n        <p>{metrics.priceToSalesRatioTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>P/FCF ratio</p>\n        <p>{metrics.pfcfRatioTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>P/B ratio</p>\n        <p>{metrics.pbRatioTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>Book value per share</p>\n        <p>{metrics.bookValuePerShareTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>Tangible book value per share</p>\n        <p>{metrics.tangibleBookValuePerShareTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>Dividend</p>\n        <p>{metrics.dividendYieldTTM.toFixed(3)}</p>\n      </DataRow>\n      <DataRow>\n        <p>Dividend %</p>\n        <p>{metrics.dividendYieldPercentageTTM.toFixed(3)}</p>\n      </DataRow>\n    </Container>\n  );\n};\n\nexport default StockKeyMetricsComponent;","import React from 'react';\nimport styled from 'styled-components';\nimport { StockProfile } from '../../reducers/stockReducer';\nimport * as styles from '../../styles/vars';\n\ninterface Props {\n  profile: StockProfile;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nconst DataRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 420px;\n  padding: .5rem;\n  margin: .25rem;\n  border-radius: ${styles.BORDER_RADIUS};\n  border-bottom: 2px solid ${styles.LIGHT_GRAY};\n  background-color: ${styles.SECOND_COLOR};\n`;\n\nconst StockProfileComponent = ({ profile }: Props) => {\n  return (\n    <Container>\n      <DataRow>\n        <p>Ticker</p>\n        <p>{profile.symbol}</p>\n      </DataRow>\n      <DataRow>\n        <p>Name</p>\n        <p>{profile.companyName}</p>\n      </DataRow>\n      <DataRow>\n        <p>Describtion</p>\n        <p>{profile.description && profile.description.substr(0, 50) + '...'}</p>\n      </DataRow>\n      <DataRow>\n        <p>Price</p>\n        <p>{profile.price}</p>\n      </DataRow>\n      <DataRow>\n        <p>Market cap</p>\n        <p>{profile.mktCap}</p>\n      </DataRow>\n      <DataRow>\n        <p>DCF</p>\n        <p>{profile.dcf}</p>\n      </DataRow>\n      <DataRow>\n        <p>DCF difference</p>\n        <p>{profile.dcfDiff}</p>\n      </DataRow>\n    </Container>\n  );\n};\n\nexport default StockProfileComponent;","import React from 'react';\nimport styled from 'styled-components';\nimport { StockRating } from '../../reducers/stockReducer';\nimport * as styles from '../../styles/vars';\n\ninterface Props {\n  rating: StockRating;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nconst DataRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 420px;\n  padding: .5rem;\n  margin: .25rem;\n  border-radius: ${styles.BORDER_RADIUS};\n  border-bottom: 2px solid ${styles.LIGHT_GRAY};\n  background-color: ${styles.SECOND_COLOR};\n`;\n\nconst StockRatingContainer = ({ rating }: Props) => {\n  return (\n    <Container>\n      <DataRow>\n        <p>Rating</p>\n        <p>{rating.rating}</p>\n      </DataRow>\n      <DataRow>\n        <p>Rating score</p>\n        <p>{rating.ratingScore}</p>\n      </DataRow>\n      <DataRow>\n        <p>Rating DCF</p>\n        <p>{rating.ratingDetailsDCFScore}</p>\n      </DataRow>\n      <DataRow>\n        <p>Rating DE</p>\n        <p>{rating.ratingDetailsDEScore}</p>\n      </DataRow>\n      <DataRow>\n        <p>Rating PB</p>\n        <p>{rating.ratingDetailsPBScore}</p>\n      </DataRow>\n      <DataRow>\n        <p>Rating PE</p>\n        <p>{rating.ratingDetailsPEScore}</p>\n      </DataRow>\n      <DataRow>\n        <p>Rating ROA</p>\n        <p>{rating.ratingDetailsROAScore}</p>\n      </DataRow>\n      <DataRow>\n        <p>Rating ROE</p>\n        <p>{rating.ratingDetailsROEScore}</p>\n      </DataRow>\n    </Container>\n  );\n};\n\nexport default StockRatingContainer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { StockData } from '../../reducers/stockReducer';\nimport { State } from '../../types';\nimport Loader from '../Loader';\nimport StockKeyMetricsComponent from './StockKeyMetrics';\nimport StockProfileComponent from './StockProfile';\nimport StockRatingContainer from './StockRating';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\ninterface Props {\n  stock: StockData;\n}\n\nconst StockContainer = ({ stock }: Props) => {\n\n  const renderInner = () => {\n    console.log(stock);\n\n    return (\n      <Container>\n        {stock.metrics ? <StockKeyMetricsComponent metrics={stock.metrics} /> : <Loader />}\n        {stock.profile ? <StockProfileComponent profile={stock.profile} /> : <Loader />}\n        {stock.rating ? <StockRatingContainer rating={stock.rating} /> : <Loader />}\n      </Container>\n    );\n  }\n\n  return !stock.metrics && !stock.profile ? <></> : renderInner()\n};\n\nconst mapStateToProps = (state: State) => ({\n  stock: state.stock,\n});\n\nexport default connect(mapStateToProps, null)(StockContainer);","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport Input from './components/Input';\nimport StockContainer from './components/stock/StockContainer';\nimport * as styles from './styles/vars';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: ${styles.BG_COLOR};\n  }\n  * {\n    font-family: 'Roboto', sans-serif;\n    color: white;\n    border-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst Container = styled.div`\n  width: 90%;\n  padding: 2rem;\n  text-align: center;\n`;\n\nconst Top = styled.div`\n  text-align: center;\n`;\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Top>\n        <GlobalStyle />\n        <Input />\n        <Container>\n          <StockContainer />\n        </Container>\n      </Top>\n    );\n  }\n}\n\nexport default connect(null, {})(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport App from './App';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App></App>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}